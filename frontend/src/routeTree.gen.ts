/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminImport } from './routes/_admin'
import { Route as ProductsCategoryIndexImport } from './routes/products/$category/index'
import { Route as AdminAdminIndexImport } from './routes/_admin/admin/index'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const ProductsIndexLazyImport = createFileRoute('/products/')()
const AdminAdminProductsIndexLazyImport = createFileRoute(
  '/_admin/admin/products/',
)()
const AdminAdminOrdersIndexLazyImport = createFileRoute(
  '/_admin/admin/orders/',
)()
const AdminAdminCustomersIndexLazyImport = createFileRoute(
  '/_admin/admin/customers/',
)()
const AdminAdminAnalyticsIndexLazyImport = createFileRoute(
  '/_admin/admin/analytics/',
)()
const AdminAdminOrdersRecentOrdersIndexLazyImport = createFileRoute(
  '/_admin/admin/orders/recent-orders/',
)()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const AdminRoute = AdminImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ProductsIndexLazyRoute = ProductsIndexLazyImport.update({
  path: '/products/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/products/index.lazy').then((d) => d.Route),
)

const ProductsCategoryIndexRoute = ProductsCategoryIndexImport.update({
  path: '/products/$category/',
  getParentRoute: () => rootRoute,
} as any)

const AdminAdminIndexRoute = AdminAdminIndexImport.update({
  path: '/admin/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminProductsIndexLazyRoute =
  AdminAdminProductsIndexLazyImport.update({
    path: '/admin/products/',
    getParentRoute: () => AdminRoute,
  } as any).lazy(() =>
    import('./routes/_admin/admin/products/index.lazy').then((d) => d.Route),
  )

const AdminAdminOrdersIndexLazyRoute = AdminAdminOrdersIndexLazyImport.update({
  path: '/admin/orders/',
  getParentRoute: () => AdminRoute,
} as any).lazy(() =>
  import('./routes/_admin/admin/orders/index.lazy').then((d) => d.Route),
)

const AdminAdminCustomersIndexLazyRoute =
  AdminAdminCustomersIndexLazyImport.update({
    path: '/admin/customers/',
    getParentRoute: () => AdminRoute,
  } as any).lazy(() =>
    import('./routes/_admin/admin/customers/index.lazy').then((d) => d.Route),
  )

const AdminAdminAnalyticsIndexLazyRoute =
  AdminAdminAnalyticsIndexLazyImport.update({
    path: '/admin/analytics/',
    getParentRoute: () => AdminRoute,
  } as any).lazy(() =>
    import('./routes/_admin/admin/analytics/index.lazy').then((d) => d.Route),
  )

const AdminAdminOrdersRecentOrdersIndexLazyRoute =
  AdminAdminOrdersRecentOrdersIndexLazyImport.update({
    path: '/admin/orders/recent-orders/',
    getParentRoute: () => AdminRoute,
  } as any).lazy(() =>
    import('./routes/_admin/admin/orders/recent-orders/index.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_admin/admin/': {
      id: '/_admin/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminAdminIndexImport
      parentRoute: typeof AdminImport
    }
    '/products/$category/': {
      id: '/products/$category/'
      path: '/products/$category'
      fullPath: '/products/$category'
      preLoaderRoute: typeof ProductsCategoryIndexImport
      parentRoute: typeof rootRoute
    }
    '/_admin/admin/analytics/': {
      id: '/_admin/admin/analytics/'
      path: '/admin/analytics'
      fullPath: '/admin/analytics'
      preLoaderRoute: typeof AdminAdminAnalyticsIndexLazyImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/customers/': {
      id: '/_admin/admin/customers/'
      path: '/admin/customers'
      fullPath: '/admin/customers'
      preLoaderRoute: typeof AdminAdminCustomersIndexLazyImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/orders/': {
      id: '/_admin/admin/orders/'
      path: '/admin/orders'
      fullPath: '/admin/orders'
      preLoaderRoute: typeof AdminAdminOrdersIndexLazyImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/products/': {
      id: '/_admin/admin/products/'
      path: '/admin/products'
      fullPath: '/admin/products'
      preLoaderRoute: typeof AdminAdminProductsIndexLazyImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/orders/recent-orders/': {
      id: '/_admin/admin/orders/recent-orders/'
      path: '/admin/orders/recent-orders'
      fullPath: '/admin/orders/recent-orders'
      preLoaderRoute: typeof AdminAdminOrdersRecentOrdersIndexLazyImport
      parentRoute: typeof AdminImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AdminRoute: AdminRoute.addChildren({
    AdminAdminIndexRoute,
    AdminAdminAnalyticsIndexLazyRoute,
    AdminAdminCustomersIndexLazyRoute,
    AdminAdminOrdersIndexLazyRoute,
    AdminAdminProductsIndexLazyRoute,
    AdminAdminOrdersRecentOrdersIndexLazyRoute,
  }),
  AboutLazyRoute,
  ProductsIndexLazyRoute,
  ProductsCategoryIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_admin",
        "/about",
        "/products/",
        "/products/$category/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_admin": {
      "filePath": "_admin.tsx",
      "children": [
        "/_admin/admin/",
        "/_admin/admin/analytics/",
        "/_admin/admin/customers/",
        "/_admin/admin/orders/",
        "/_admin/admin/products/",
        "/_admin/admin/orders/recent-orders/"
      ]
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/products/": {
      "filePath": "products/index.lazy.tsx"
    },
    "/_admin/admin/": {
      "filePath": "_admin/admin/index.tsx",
      "parent": "/_admin"
    },
    "/products/$category/": {
      "filePath": "products/$category/index.tsx"
    },
    "/_admin/admin/analytics/": {
      "filePath": "_admin/admin/analytics/index.lazy.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/customers/": {
      "filePath": "_admin/admin/customers/index.lazy.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/orders/": {
      "filePath": "_admin/admin/orders/index.lazy.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/products/": {
      "filePath": "_admin/admin/products/index.lazy.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/orders/recent-orders/": {
      "filePath": "_admin/admin/orders/recent-orders/index.lazy.tsx",
      "parent": "/_admin"
    }
  }
}
ROUTE_MANIFEST_END */
